---
// src/components/BlogListItem.astro
import FormattedDate from "@/components/FormattedDate.astro";
import type { CollectionEntry } from "astro:content";
import placeholder from "@/assets/default-images/blog-placeholder.jpg";
import { Image } from "astro:assets";
import { getImageBySrcPath } from "@/lib/utils";

const { post } = Astro.props as { post: CollectionEntry<"blog"> };

const heroImagePath = post.data.heroImage ?? "";
const image = getImageBySrcPath(heroImagePath);
---

<li class="flex items-center space-x-4 ml-8">
    <a href={`/blog/${post.id}/`} class="flex items-center space-x-4">
        {image ? (
            <Image
              src={image}
              alt=""
              width={112}
              height={112}
              format="webp"
              class="rounded-lg object-cover"
            />
          ) : (
            <img
              src={placeholder.src}
              alt=""
              class="w-28 h-28 rounded-lg object-cover"
              loading="lazy"
              decoding="async"
            />
          )}
      
        <div class="leading-tight">
            <h4 class="text-lg font-semibold text-gray-800 hover:text-blue-600">
                {post.data.title}
            </h4>

            <div class="flex flex-col">
                <p class="text-sm text-gray-500">
                    <FormattedDate date={post.data.pubDate} />
                </p>

                <!-- {post.data.category && (
              <p class="text-sm font-medium text-blue-500">
                  Category: {post.data.category}
              </p>
          )} -->

                {
                    post.data.tags && post.data.tags.length > 0 && (
                        <div class="flex flex-wrap gap-1 mt-1 w-full">
                            {post.data.tags.map((tag) => (
                                <a
                                    href={`/tags/${tag}`}
                                    class="px-2 py-0.5 text-xs font-medium text-white bg-blue-500 rounded-full hover:bg-blue-600 transition"
                                >
                                    {tag}
                                </a>
                            ))}
                        </div>
                    )
                }
            </div>
        </div>
    </a>
</li>
